Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.76917017]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.76917017]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.76917017]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.76917017]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.76917017]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.76917017]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.7769098]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.84996676]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.9111669]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.95684385]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.98637193]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0018116]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0070363]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0064422]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0037179]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0011744]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.99972785]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.9993247]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.9995025]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.9998155]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0000242]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0000862]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0000607]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0000168]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.9999912]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.99998724]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.999994]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0000001]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0000023]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0000015]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0000001]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.99999964]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.99999964]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.99999964]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.9999997]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.99999976]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.9999998]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.9999998]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.9999999]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.9999999]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.99999994]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.99999994]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.99999994]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.99999994]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.99999994]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[0.99999994]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
Starting evaluation
state: Discrete { space: Discrete { size: 1 }, idx: 0 }
Prediction: Tensor {
  data:
[[1.0]],
  shape:  [1, 1],
  device:  Cpu,
  backend:  "autodiff<ndarray>",
  kind:  "Float",
  dtype:  "f32",
}
action: Discrete { space: Discrete { size: 1 }, idx: 0 }
reward: 1.0
done: true
